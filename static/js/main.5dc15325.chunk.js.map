{"version":3,"sources":["api/client.js","features/todos/todosSlice.js","features/header/Header.js","features/todos/times-solid.svg","features/filters/colors.js","features/todos/TodoListItem.js","features/todos/TodoList.js","features/filters/filtersSlice.js","features/footer/Footer.js","App.js","api/server.js","reducer.js","store.js","index.js"],"names":["client","endpoint","a","body","customConfig","headers","config","method","JSON","stringify","window","fetch","response","json","data","ok","Error","statusText","Promise","reject","message","get","post","initialState","dispatch","getState","type","payload","todos","_path","Header","useState","text","setText","useDispatch","className","placeholder","value","onChange","e","target","onKeyDown","trimmedText","trim","which","initialTodo","todo","saveNewTodo","_extends","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref","svgRef","title","props","createElement","focusable","role","viewBox","ref","fill","d","ForwardRef","forwardRef","availableColors","capitalize","s","toUpperCase","slice","TodoListItem","id","useSelector","state","todoId","find","selectTodoById","completed","color","colorOptions","map","c","checked","style","onClick","selectTodoIds","TodoList","renderedListItems","shallowEqual","StatusFilters","All","Active","Completed","status","colors","RemainingTodos","count","suffix","StatusFilter","renderedFilters","ColorFilters","renderedColors","includes","name","backgroundColor","Footer","todosRemaining","filter","filters","changeType","App","IdSerializer","RestSerializer","extend","serializeIds","rng","seedrandom","randomFromArray","array","min","max","Math","ceil","floor","todoTemplates","base","values","Server","routes","namespace","resource","server","schema","req","normalizedRequestAttrs","create","models","Model","list","hasMany","factories","Factory","Number","template","replace","generateTodoText","serializers","serialize","object","request","numerifyId","forEach","seeds","createList","rootReducer","combineReducers","action","concat","existingColor","composedEnhancer","composeWithDevTools","applyMiddleware","thunkMiddleware","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5dc15325.chunk.js","sourcesContent":["// A tiny wrapper around fetch(), borrowed from\n// https://kentcdodds.com/blog/replace-axios-with-a-simple-custom-fetch-wrapper\n\nexport async function client(endpoint, { body, ...customConfig } = {}) {\n  const headers = { 'Content-Type': 'application/json' }\n\n  const config = {\n    method: body ? 'POST' : 'GET',\n    ...customConfig,\n    headers: {\n      ...headers,\n      ...customConfig.headers,\n    },\n  }\n\n  if (body) {\n    config.body = JSON.stringify(body)\n  }\n\n  let data\n  try {\n    const response = await window.fetch(endpoint, config)\n    data = await response.json()\n    if (response.ok) {\n      return data\n    }\n    throw new Error(response.statusText)\n  } catch (err) {\n    return Promise.reject(err.message ? err.message : data)\n  }\n}\n\nclient.get = function (endpoint, customConfig = {}) {\n  return client(endpoint, { ...customConfig, method: 'GET' })\n}\n\nclient.post = function (endpoint, body, customConfig = {}) {\n  return client(endpoint, { ...customConfig, body })\n}\n","import { client } from '../../api/client'\n\nconst initialState = []\n\nexport default function todosReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'todos/todoAdded': {\n      return [...state, action.payload]\n    }\n    case 'todos/todoToggled': {\n      return state.map((todo) => {\n        if (todo.id !== action.payload) {\n          return todo\n        }\n\n        return {\n          ...todo,\n          completed: !todo.completed,\n        }\n      })\n    }\n    case 'todos/colorSelected': {\n      const { color, todoId } = action.payload\n      return state.map((todo) => {\n        if (todo.id !== todoId) {\n          return todo\n        }\n\n        return {\n          ...todo,\n          color,\n        }\n      })\n    }\n    case 'todos/todoDeleted': {\n      return state.filter((todo) => todo.id !== action.payload)\n    }\n    case 'todos/allCompleted': {\n      return state.map((todo) => {\n        return { ...todo, completed: true }\n      })\n    }\n    case 'todos/completedCleared': {\n      return state.filter((todo) => !todo.completed)\n    }\n    case 'todos/todosLoaded': {\n      return action.payload\n    }\n    default:\n      return state\n  }\n}\n\n// Thunk function\nexport async function fetchTodos(dispatch, getState) {\n  const response = await client.get('/fakeApi/todos')\n  dispatch({ type: 'todos/todosLoaded', payload: response.todos })\n}\n\nexport function saveNewTodo(text) {\n  return async function saveNewTodoThunk(dispatch, getState) {\n    const initialTodo = { text }\n    const response = await client.post('/fakeApi/todos', { todo: initialTodo })\n    dispatch({ type: 'todos/todoAdded', payload: response.todo })\n  }\n}\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { saveNewTodo } from '../todos/todosSlice'\n\nconst Header = () => {\n  const [text, setText] = useState('')\n  const dispatch = useDispatch()\n\n  const handleChange = (e) => setText(e.target.value)\n\n  const handleKeyDown = (e) => {\n    // If the user pressed the Enter key:\n    const trimmedText = text.trim()\n    if (e.which === 13 && trimmedText) {\n      // Create and dispatch the thunk function itself\n      dispatch(saveNewTodo(trimmedText))\n      // And clear out the text input\n      setText('')\n    }\n  }\n\n  return (\n    <header className=\"header\">\n      <input\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={text}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n      />\n    </header>\n  )\n}\n\nexport default Header\n","var _path;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgTimesSolid = function SvgTimesSolid(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    \"data-prefix\": \"fas\",\n    \"data-icon\": \"times\",\n    className: \"svg-inline--fa fa-times fa-w-11\",\n    role: \"img\",\n    viewBox: \"0 0 352 512\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgTimesSolid, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/times-solid.a552303d.svg\";\nexport { ForwardRef as ReactComponent };","export const availableColors = ['green', 'blue', 'orange', 'purple', 'red']\n\nexport const capitalize = (s) => s[0].toUpperCase() + s.slice(1)\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { ReactComponent as TimesSolid } from './times-solid.svg'\n\nimport { availableColors, capitalize } from '../filters/colors'\n\nconst selectTodoById = (state, todoId) => {\n  return state.todos.find((todo) => todo.id === todoId)\n}\n\n// Destructure `props.id`, since we just need the ID value\nconst TodoListItem = ({ id }) => {\n  // Call our `selectTodoById` with the state _and_ the ID value\n  const todo = useSelector((state) => selectTodoById(state, id))\n  const { text, completed, color } = todo\n\n  const dispatch = useDispatch()\n\n  const handleCompletedChanged = () => {\n    dispatch({ type: 'todos/todoToggled', payload: todo.id })\n  }\n\n  const handleColorChanged = (e) => {\n    const color = e.target.value\n    dispatch({\n      type: 'todos/colorSelected',\n      payload: { todoId: todo.id, color },\n    })\n  }\n\n  const onDelete = () => {\n    dispatch({ type: 'todos/todoDeleted', payload: todo.id })\n  }\n\n  const colorOptions = availableColors.map((c) => (\n    <option key={c} value={c}>\n      {capitalize(c)}\n    </option>\n  ))\n\n  return (\n    <li>\n      <div className=\"view\">\n        <div className=\"segment label\">\n          <input\n            className=\"toggle\"\n            type=\"checkbox\"\n            checked={completed}\n            onChange={handleCompletedChanged}\n          />\n          <div className=\"todo-text\">{text}</div>\n        </div>\n        <div className=\"segment buttons\">\n          <select\n            className=\"colorPicker\"\n            value={color}\n            style={{ color }}\n            onChange={handleColorChanged}\n          >\n            <option value=\"\"></option>\n            {colorOptions}\n          </select>\n          <button className=\"destroy\" onClick={onDelete}>\n            <TimesSolid />\n          </button>\n        </div>\n      </div>\n    </li>\n  )\n}\n\nexport default TodoListItem\n","import React from 'react'\nimport { useSelector, shallowEqual } from 'react-redux'\nimport TodoListItem from './TodoListItem'\n\nconst selectTodoIds = (state) => state.todos.map((todo) => todo.id)\n\nconst TodoList = () => {\n  const todoIds = useSelector(selectTodoIds, shallowEqual)\n\n  const renderedListItems = todoIds.map((todoId) => {\n    return <TodoListItem key={todoId} id={todoId} />\n  })\n\n  return <ul className=\"todo-list\">{renderedListItems}</ul>\n}\n\nexport default TodoList\n","export const StatusFilters = {\n  All: 'all',\n  Active: 'active',\n  Completed: 'completed',\n}\n\nconst initialState = {\n  status: StatusFilters.All,\n  colors: [],\n}\n\nexport default function filtersReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'filters/statusFilterChanged': {\n      return {\n        // Again, one less level of nesting to copy\n        ...state,\n        status: action.payload,\n      }\n    }\n    case 'filters/colorFilterChanged': {\n      let { color, changeType } = action.payload\n      const { colors } = state\n\n      switch (changeType) {\n        case 'added': {\n          if (colors.includes(color)) {\n            // This color already is set as a filter. Don't change the state.\n            return state\n          }\n\n          return {\n            ...state,\n            colors: state.colors.concat(color),\n          }\n        }\n        case 'removed': {\n          return {\n            ...state,\n            colors: state.colors.filter(\n              (existingColor) => existingColor !== color\n            ),\n          }\n        }\n        default:\n          return state\n      }\n    }\n    default:\n      return state\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { availableColors, capitalize } from '../filters/colors'\nimport { StatusFilters } from '../filters/filtersSlice'\n\nconst RemainingTodos = ({ count }) => {\n  const suffix = count === 1 ? '' : 's'\n\n  return (\n    <div className=\"todo-count\">\n      <h5>Remaining Todos</h5>\n      <strong>{count}</strong> item{suffix} left\n    </div>\n  )\n}\n\nconst StatusFilter = ({ value: status, onChange }) => {\n  const renderedFilters = Object.keys(StatusFilters).map((key) => {\n    const value = StatusFilters[key]\n    const handleClick = () => onChange(value)\n    const className = value === status ? 'selected' : ''\n\n    return (\n      <li key={value}>\n        <button className={className} onClick={handleClick}>\n          {key}\n        </button>\n      </li>\n    )\n  })\n\n  return (\n    <div className=\"filters statusFilters\">\n      <h5>Filter by Status</h5>\n      <ul>{renderedFilters}</ul>\n    </div>\n  )\n}\n\nconst ColorFilters = ({ value: colors, onChange }) => {\n  const renderedColors = availableColors.map((color) => {\n    const checked = colors.includes(color)\n    const handleChange = () => {\n      const changeType = checked ? 'removed' : 'added'\n      onChange(color, changeType)\n    }\n\n    return (\n      <label key={color}>\n        <input\n          type=\"checkbox\"\n          name={color}\n          checked={checked}\n          onChange={handleChange}\n        />\n        <span\n          className=\"color-block\"\n          style={{\n            backgroundColor: color,\n          }}\n        ></span>\n        {capitalize(color)}\n      </label>\n    )\n  })\n\n  return (\n    <div className=\"filters colorFilters\">\n      <h5>Filter by Color</h5>\n      <form className=\"colorSelection\">{renderedColors}</form>\n    </div>\n  )\n}\n\nconst Footer = () => {\n  const dispatch = useDispatch()\n\n  const todosRemaining = useSelector((state) => {\n    const uncompletedTodos = state.todos.filter((todo) => !todo.completed)\n    return uncompletedTodos.length\n  })\n\n  const { status, colors } = useSelector((state) => state.filters)\n\n  const onMarkCompletedClicked = () => dispatch({ type: 'todos/allCompleted' })\n  const onClearCompletedClicked = () =>\n    dispatch({ type: 'todos/completedCleared' })\n\n  const onColorChange = (color, changeType) =>\n    dispatch({\n      type: 'filters/colorFilterChanged',\n      payload: { color, changeType },\n    })\n\n  const onStatusChange = (status) =>\n    dispatch({ type: 'filters/statusFilterChanged', payload: status })\n\n  return (\n    <footer className=\"footer\">\n      <div className=\"actions\">\n        <h5>Actions</h5>\n        <button className=\"button\" onClick={onMarkCompletedClicked}>\n          Mark All Completed\n        </button>\n        <button className=\"button\" onClick={onClearCompletedClicked}>\n          Clear Completed\n        </button>\n      </div>\n\n      <RemainingTodos count={todosRemaining} />\n      <StatusFilter value={status} onChange={onStatusChange} />\n      <ColorFilters value={colors} onChange={onColorChange} />\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\n\nimport Header from './features/header/Header'\nimport TodoList from './features/todos/TodoList'\nimport Footer from './features/footer/Footer'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <nav>\n        <section>\n          <h1>Redux Fundamentals Example</h1>\n        </section>\n      </nav>\n      <main>\n        <section className=\"medium-container\">\n          <h2>Todos</h2>\n          <div className=\"todoapp\">\n            <Header />\n            <TodoList />\n            <Footer />\n          </div>\n        </section>\n      </main>\n    </div>\n  )\n}\n\nexport default App\n","/* eslint-disable no-unused-vars */\n\nimport { Server, Model, Factory, hasMany, RestSerializer } from 'miragejs'\n\nimport faker from 'faker'\nimport seedrandom from 'seedrandom'\n\nconst IdSerializer = RestSerializer.extend({\n  serializeIds: 'always',\n})\n\n// Set up a seeded random number generator, so that we get\n// a consistent set of users / entries each time the page loads.\n// This can be reset by deleting this localStorage value,\n// or turned off by setting `useSeededRNG` to false.\nlet useSeededRNG = false\n\nlet rng = seedrandom()\n\nif (useSeededRNG) {\n  let randomSeedString = localStorage.getItem('randomTimestampSeed')\n  let seedDate\n\n  if (randomSeedString) {\n    seedDate = new Date(randomSeedString)\n  } else {\n    seedDate = new Date()\n    randomSeedString = seedDate.toISOString()\n    localStorage.setItem('randomTimestampSeed', randomSeedString)\n  }\n\n  rng = seedrandom(randomSeedString)\n  faker.seed(seedDate.getTime())\n}\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min)\n  max = Math.floor(max)\n  return Math.floor(rng() * (max - min + 1)) + min\n}\n\nconst randomFromArray = (array) => {\n  const index = getRandomInt(0, array.length - 1)\n  return array[index]\n}\n\nconst todoTemplates = [\n  { base: 'Buy $THING', values: ['milk', 'bread', 'cheese', 'toys'] },\n  { base: 'Clean $THING', values: ['house', 'yard', 'bedroom', 'car'] },\n  { base: 'Read $THING', values: ['newspaper', 'book', 'email'] },\n]\n\nconst generateTodoText = () => {\n  const template = randomFromArray(todoTemplates)\n  const value = randomFromArray(template.values)\n  const text = template.base.replace('$THING', value)\n  return text\n}\n\nnew Server({\n  routes() {\n    this.namespace = 'fakeApi'\n    //this.timing = 2000\n\n    this.resource('todos')\n    this.resource('lists')\n\n    const server = this\n\n    this.post('/todos', function (schema, req) {\n      const data = this.normalizedRequestAttrs()\n\n      if (data.text === 'error') {\n        throw new Error('Could not save the todo!')\n      }\n\n      const result = server.create('todo', data)\n      return result\n    })\n  },\n  models: {\n    todo: Model.extend({}),\n    list: Model.extend({\n      todos: hasMany(),\n    }),\n  },\n  factories: {\n    todo: Factory.extend({\n      id(i) {\n        return Number(i)\n      },\n      text() {\n        return generateTodoText()\n      },\n      completed() {\n        return false\n      },\n      color() {\n        return ''\n      },\n    }),\n  },\n  serializers: {\n    todo: IdSerializer.extend({\n      serialize(object, request) {\n        // HACK Mirage keeps wanting to store integer IDs as strings. Always convert them to numbers for now.\n        const numerifyId = (todo) => {\n          todo.id = Number(todo.id)\n        }\n        let json = IdSerializer.prototype.serialize.apply(this, arguments)\n\n        if (json.todo) {\n          numerifyId(json.todo)\n        } else if (json.todos) {\n          json.todos.forEach(numerifyId)\n        }\n\n        return json\n      },\n    }),\n    list: IdSerializer,\n  },\n  seeds(server) {\n    server.createList('todo', 5)\n  },\n})\n","import { combineReducers } from 'redux'\n\nimport todosReducer from './features/todos/todosSlice'\nimport filtersReducer from './features/filters/filtersSlice'\n\nconst rootReducer = combineReducers({\n  // Define a top-level state field named `todos`, handled by `todosReducer`\n  todos: todosReducer,\n  filters: filtersReducer,\n})\n\nexport default rootReducer\n","import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport rootReducer from './reducer'\n\nconst composedEnhancer = composeWithDevTools(\n  applyMiddleware(thunkMiddleware)\n  // other store enhancers if any\n)\n\nconst store = createStore(rootReducer, composedEnhancer)\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport './index.css'\nimport App from './App'\n\nimport './api/server'\n\nimport store from './store'\nimport { fetchTodos } from './features/todos/todosSlice'\n\nstore.dispatch(fetchTodos)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}